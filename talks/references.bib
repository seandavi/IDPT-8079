@article{Turing1950-TURCMA,
	author = {Alan Turing},
	doi = {10.1093/mind/lix.236.433},
	journal = {Mind},
	number = {October},
	pages = {433--60},
	publisher = {Oxford University Press},
	title = {Computing Machinery and Intelligence},
	volume = {59},
	year = {1950}
}



@misc{norman_history_2024,
    title = {History of {Information}},
    url = {https://www.historyofinformation.com/?cat=71},
    urldate = {2024-09-19},
    author = {Norman, Jeremy},
    month = sep,
    year = {2024},
    file = {History of Information:/Users/seandavis/Zotero/storage/X2WY3RY2/www.historyofinformation.com.html:text/html},
}

@book{asimov_i_2004,
	address = {New York},
	edition = {Bantam hardcover ed. (2)},
	title = {I, {Robot}},
	isbn = {978-0-553-80370-9},
	abstract = {Isaac Asimov's I, Robot launches readers on an adventure into a not-so-distant future where man and machine , struggle to redefinelife, love, and consciousness—and where the stakes are nothing less than survival. Filled with unforgettable characters, mind-bending speculation, and nonstop action, I, Robot is a powerful reading experience from one of the master storytellers of our time.

I, ROBOT

They mustn't harm a human being, they must obey hitman orders, and they must protect their own existence...but only so long as that doesn't violate rules one and two. With these Three Laws of Robotics, humanity embarked on perhaps its greatest adventure: the invention of the first positronic man. It was a bold new era of evolution that would open up enormous possibilities—and unforeseen risks. For the scientists who invented the earliest robots weren't content that their creations should ' remain programmed helpers, companions, and semisentient worker-machines. And soon the robots themselves; aware of their own intelligence, power, and humanity, aren't either.

As humans and robots struggle to survive together—and sometimes against each other—on earth and in space, the future of both hangs in the balance. Human men and women confront robots gone mad, telepathic robots, robot politicians, and vast robotic intelligences that may already secretly control the world. And both are asking the same questions: What is human? And is humanity obsolete?

In l, Robot Isaac Asimov changes forever our perception of robots, and human beings and updates the timeless myth of man's dream to play god. with all its rewards—and terrors.
--front flap},
	language = {eng},
	publisher = {Bantam Books},
	author = {Asimov, Isaac},
	month = jun,
	year = {1950},
	note = {Open Library ID: OL22744922M},
	keywords = {Robots -- Fiction},
	annote = {US/CAN},
}


@misc{noauthor_turing_2024,
	title = {Turing machine},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Turing_machine&oldid=1245876266},
	abstract = {A Turing machine is a mathematical model of computation describing an abstract machine that manipulates symbols on a strip of tape according to a table of rules. Despite the model's simplicity, it is capable of implementing any computer algorithm.
The machine operates on an infinite memory tape divided into discrete cells, each of which can hold a single symbol drawn from a finite set of symbols called the alphabet of the machine. It has a "head" that, at any point in the machine's operation, is positioned over one of these cells, and a "state" selected from a finite set of states. At each step of its operation, the head reads the symbol in its cell. Then, based on the symbol and the machine's own present state, the machine writes a symbol into the same cell, and moves the head one step to the left or the right, or halts the computation. The choice of which replacement symbol to write, which direction to move the head, and whether to halt is based on a finite table that specifies what to do for each combination of the current state and the symbol that is read. Like a real computer program, it is possible for a Turing machine to go into an infinite loop which will never halt.
The Turing machine was invented in 1936 by Alan Turing, who called it an "a-machine" (automatic machine). It was Turing's doctoral advisor, Alonzo Church, who later coined the term "Turing machine" in a review.  With this model, Turing was able to answer two questions in the negative:

Does a machine exist that can determine whether any arbitrary machine on its tape is "circular" (e.g., freezes, or fails to continue its computational task)?
Does a machine exist that can determine whether any arbitrary machine on its tape ever prints a given symbol?
Thus by providing a mathematical description of a very simple device capable of arbitrary computations, he was able to prove properties of computation in general—and in particular, the uncomputability of the Entscheidungsproblem ('decision problem').
Turing machines proved the existence of fundamental limitations on the power of mechanical computation. While they can express arbitrary computations, their minimalist design makes them too slow for computation in practice: real-world computers are based on different designs that, unlike Turing machines, use random-access memory.
Turing completeness is the ability for a computational model or a system of instructions to simulate a Turing machine. A programming language that is Turing complete is theoretically capable of expressing all tasks accomplishable by computers; nearly all programming languages are Turing complete if the limitations of finite memory are ignored.},
	language = {en},
	urldate = {2024-10-01},
	journal = {Wikipedia},
	month = sep,
	year = {2024},
	note = {Page Version ID: 1245876266},
	file = {Snapshot:/Users/seandavis/Zotero/storage/C3G6JD8M/Turing_machine.html:text/html},
}

@unpublished{turing_computable_1936,
	title = {On computable numbers, with an application to the {Entscheidungsproblem}},
	url = {https://www.abelard.org/turpap2/tp2-ie.asp},
	urldate = {2024-10-01},
	author = {Turing, Alan},
	year = {1936},
	file = {On computable numbers, with an application to the Entscheidungsproblem - A. M. Turing, 1936:/Users/seandavis/Zotero/storage/CSDZ735B/tp2-ie.html:text/html},
}

@article{sejnowski_large_2023,
	title = {Large {Language} {Models} and the {Reverse} {Turing} {Test}},
	volume = {35},
	issn = {0899-7667},
	url = {https://doi.org/10.1162/neco_a_01563},
	doi = {10.1162/neco_a_01563},
	abstract = {Large language models (LLMs) have been transformative. They are pretrained foundational models that are self-supervised and can be adapted with fine-tuning to a wide range of natural language tasks, each of which previously would have required a separate network model. This is one step closer to the extraordinary versatility of human language. GPT-3 and, more recently, LaMDA, both of them LLMs, can carry on dialogs with humans on many topics after minimal priming with a few examples. However, there has been a wide range of reactions and debate on whether these LLMs understand what they are saying or exhibit signs of intelligence. This high variance is exhibited in three interviews with LLMs reaching wildly different conclusions. A new possibility was uncovered that could explain this divergence. What appears to be intelligence in LLMs may in fact be a mirror that reflects the intelligence of the interviewer, a remarkable twist that could be considered a reverse Turing test. If so, then by studying interviews, we may be learning more about the intelligence and beliefs of the interviewer than the intelligence of the LLMs. As LLMs become more capable, they may transform the way we interact with machines and how they interact with each other. Increasingly, LLMs are being coupled with sensorimotor devices. LLMs can talk the talk, but can they walk the walk? A road map for achieving artificial general autonomy is outlined with seven major improvements inspired by brain systems and how LLMs could in turn be used to uncover new insights into brain function.},
	number = {3},
	urldate = {2024-10-01},
	journal = {Neural Computation},
	author = {Sejnowski, Terrence J.},
	month = feb,
	year = {2023},
	pages = {309--342},
	file = {Full Text PDF:/Users/seandavis/Zotero/storage/IPG8IXX3/Sejnowski - 2023 - Large Language Models and the Reverse Turing Test.pdf:application/pdf;Snapshot:/Users/seandavis/Zotero/storage/EU8PR5X7/Large-Language-Models-and-the-Reverse-Turing-Test.html:text/html},
}
